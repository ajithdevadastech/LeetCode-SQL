Table: Cinema

+-------------+------+
| Column Name | Type |
+-------------+------+
| seat_id     | int  |
| free        | bool |
+-------------+------+
seat_id is an auto-increment column for this table.
Each row of this table indicates whether the ith seat is free or not. 1 means free while 0 means occupied.
Write a solution to find the length of longest consecutive sequence of available seats in the cinema.

Note:

There will always be at most one longest consecutive sequence.
If there are multiple consecutive sequences with the same length, include all of them in the output.
Return the result table ordered by first_seat_id in ascending order.

The result format is in the following example.

 

Example:

Input:

Cinema table:

+---------+------+
| seat_id | free |
+---------+------+
| 1       | 1    |
| 2       | 0    |
| 3       | 1    |
| 4       | 1    |
| 5       | 1    |
+---------+------+
Output:

+-----------------+----------------+-----------------------+
| first_seat_id   | last_seat_id   | consecutive_seats_len |
+-----------------+----------------+-----------------------+
| 3               | 5              | 3                     |
+-----------------+----------------+-----------------------+
Explanation:

Longest consecutive sequence of available seats starts from seat 3 and ends at seat 5 with a length of 3.
Output table is ordered by first_seat_id in ascending order.

# Write your MySQL query statement below

with Cinema_r as
(
    select seat_id, free,
    seat_id - dense_rank() over(partition by free order by seat_id ) as myrank
    from Cinema
    order by seat_id
)


#select * from Cinema_r order by seat_id
, cinema_r1 as
(
select 
min(seat_id) as first_seat_id,
max(seat_id) as last_seat_id,
max(seat_id) - min(seat_id) + 1 as consecutive_seats_len 
from Cinema_r
where free = 1
group by myrank
),


cinema_r1_ranked as
(
select first_seat_id, last_seat_id, consecutive_seats_len,
dense_rank() over(order by consecutive_seats_len desc) as myrank
from cinema_r1
)

select first_seat_id, last_seat_id, consecutive_seats_len from cinema_r1_ranked where myrank = 1

Reference -> https://mattboegner.com/improve-your-sql-skills-master-the-gaps-islands-problem/




